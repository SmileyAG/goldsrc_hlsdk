Half-Life Full SDK 2.2:

Questions about the SDK should be sent to sdk@valvesoftware.com.

Contents:

Documentation:
==============

PortingTips.doc contains guidelines and descriptions of file differences between version 1.0 and version 2.0 of the SDK

Events.doc contains documentation on the event system.

HLVoice.doc contains documentation on how to implement voice in a mod.

HLTV.doc contains documentation on how to implement HLTV in a mod.

How to make a mod.doc contains documentation on how to set up the liblist.gam file and how to change the launcher UI for your mod.

Input.doc contains documentation on the mouse, keyboard and joystick handling system of the client.dll

Netgraph.doc explains how to read the new netgraph.

NetworkEntity.doc explains how to use the new entity filtering/handling functions of the game and client dlls.

PlayerPhysics.doc explains how to manipulate shared player physics code so your MOD can have modified physics and still predict correctly.

Triangle.doc explains how to use the triangle API from the client.dll

View.doc explains how to set up the render origin, etc. from the client .dll

In addition, the Launcher Strings subdirectory contains documentation to allow you to alter launcher text strings by overriding the values in the default string .dll ( hl_res.dll ).

OldSourceCode:
==============

The source code directory that existed as of version 1.0 of the SDK.  See "PortingTips.doc" for how to merge your code with this version of the SDK.

SourceCode:
===========

The directory containing all the code to the game DLL required to rebuild hl.dll.  Also included is the source code to all the compiling utilities for the various elements of Half-Life.

Server Info:
============

Server protocol.txt contains all the information folks should need if they wish to write a separate net game launcher.

Models:
=======

The models provided should give a good example of the possibilities for building characters for use with Half-Life.  Examples are provided of characters and weapons that appear in the game, to allow modellers to familiarize themselves with the character building process.

PlayerModels: animations, textures, and .qc scripts for the Player Models (all shipped versions).

MonsterModels: all available resources for all monsters partially or fully developed for Half-Life that were not included in the final game, plus source files for Barney, Human Grunt, and the Tentacle monster that did make it into the game (these were chosen as they best represent the various facets of monster development for Half-Life).

WeaponModels: world model and view model with animations of the Assault Rifle and Gluon Gun.

Maps:
=====

Two of the opening maps from Half-Life, with their lighting radiosity files, are provided as they contain good examples of some of the most complicated entity scripting to be found within the game. They should serve as a good source for learning how to use the more powerful HL entities like multisource, multimanager, scipted_sequence, AIscripted_sequence, and scripted_sentence.  A third map, env_beam, is a demo map of various beam effects that can be achieved with the env_beam entity.

C1a0.rmf and C1a0.rad
C1a0d.rmf and C1a0d.rad
Env_beam.rmf

SpriteTools:
============

Tutorial, samples, and support files for creating sprites for Half-Life.

TextureTools:
=============

Tutorial, samples, and support files for creating texture WADs for Half-Life.
